diff --git a/coherence-core/coherence_core.info.yml b/coherence-core/coherence_core.info.yml
index 04a6e63..5e83138 100644
--- a/coherence-core/coherence_core.info.yml
+++ b/coherence-core/coherence_core.info.yml
@@ -2,7 +2,7 @@ name: Coherence core
 description: Core functionality for Coherence websites.
 type: module
 core: 8.x
-core_version_requirement: ^8 || ^9
+core_version_requirement: ^8 || ^9 || ^10
 package: Coherence
 dependencies:
   - drupal:node
diff --git a/coherence-core/coherence_core.libraries.yml b/coherence-core/coherence_core.libraries.yml
index f1a919a..1fa8b4d 100644
--- a/coherence-core/coherence_core.libraries.yml
+++ b/coherence-core/coherence_core.libraries.yml
@@ -7,5 +7,5 @@ lity:
   dependencies:
     - core/jquery
     - core/drupalSettings
-    - core/jquery.once
+    - core/once
     - core/drupal
\ No newline at end of file
diff --git a/coherence-core/src/EventSubscriber/CacheControlSubscriber.php b/coherence-core/src/EventSubscriber/CacheControlSubscriber.php
index 14c151a..6d89980 100644
--- a/coherence-core/src/EventSubscriber/CacheControlSubscriber.php
+++ b/coherence-core/src/EventSubscriber/CacheControlSubscriber.php
@@ -7,17 +7,18 @@ use Drupal\Core\Cache\CacheableResponseInterface;
 use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 
 class CacheControlSubscriber implements EventSubscriberInterface {
 
   /**
    * Overrides cache control header if any of override methods are enabled and conditions met.
    *
-   * @param \Symfony\Component\HttpKernel\Event\FilterResponseEvent $event
+   * @param \Symfony\Component\HttpKernel\Event\ResponseEvent $event
    *   The event to process.
    */
-  public function onRespond(FilterResponseEvent $event) {
-    if (!$event->isMasterRequest()) {
+  public function onRespond(ResponseEvent $event) {
+    if (!$event->isMainRequest()) {
       return;
     }
 
diff --git a/coherence-core/src/EventSubscriber/RemoveXGeneratorResponseHeader.php b/coherence-core/src/EventSubscriber/RemoveXGeneratorResponseHeader.php
index fc7808e..705e739 100644
--- a/coherence-core/src/EventSubscriber/RemoveXGeneratorResponseHeader.php
+++ b/coherence-core/src/EventSubscriber/RemoveXGeneratorResponseHeader.php
@@ -1,18 +1,31 @@
 <?php
+
 namespace Drupal\coherence_core\EventSubscriber;
 
 use Symfony\Component\EventDispatcher\EventSubscriberInterface;
-use Symfony\Component\HttpKernel\Event\FilterResponseEvent;
+use Symfony\Component\HttpKernel\Event\ResponseEvent;
 use Symfony\Component\HttpKernel\KernelEvents;
 
-class RemoveXGeneratorResponseHeader implements EventSubscriberInterface {
+class RemoveXGeneratorResponseHeader implements EventSubscriberInterface
+{
+
+  /**
+   * Removes the X-Generator header from the response.
+   *
+   * @param \Symfony\Component\HttpKernel\Event\ResponseEvent $event
+   *   The event to process.
+   */
 
-  public function RemoveXGeneratorOptions(FilterResponseEvent $event) {
+  public function RemoveXGeneratorOptions(ResponseEvent $event)
+  {
     $response = $event->getResponse();
     $response->headers->remove('X-Generator');
   }
-
-  public static function getSubscribedEvents() {
+  /**
+   * {@inheritdoc}
+   */
+  public static function getSubscribedEvents()
+  {
     $events[KernelEvents::RESPONSE][] = ['RemoveXGeneratorOptions', -10];
     return $events;
   }
